Blynk Local server on Debian & Raspbian

#apt-get update หรือ normal user  $ sudo apt-get update
#apt-get install wget หรือ sudo apt-get install wget
Install dependencies
#mkdir blynk-local
#cd blynk-local
#apt show default-jdk
#apt-get install default-jdk -y
#java --version
#wget https://github.com/Peterkn2001/blynk-server/releases/download/v0.41.17/server-0.41.17.jar

Start blynk server
#java -jar /root/blynk-local/server-0.41.17.jar -dataFolder /root/blynk-local/Blynk

Blynk Server 0.41.18-SNAPSHOT successfully started.
All server output is stored in folder '/root/blynk-local/logs' file.
Admin password not specified. Random password generated.
Your Admin url is https://ip-blynk-local:9443/admin
Your Admin login email is admin@blynk.cc
Your Admin password is xxxxxxxxxxxxxxxxxxxxxxxxxxx


เปิดเว็บบราวเซอร์ เรียกหน้า Blynk 
https://ip-blynk-local:9443

user : admin@blynk.cc
password : xxxxxxxxxxxxxxxxxxxxxxxxxxx (ที่ปรากฏบน Shell)

เข้าหน้าเว็บ Blynk Admin ทำการตั้งค่า user, password ใหม่ 


เสร็จแล้วกด Ctrl+C เพื่อออกจาก Blynk


ทำให้ Start พร้อมเปิดเครื่อง
#crontab -e (เลือก option nano editor)
เพิ่มข้อมูลเข้าไปที่บรรทัดล่างสุด

@reboot java -jar /root/blynk-local/server-0.41.17.jar -dataFolder /root/blynk-local/Blynk &

กด CTRL + O กด Enter เพื่อเขียนไฟล์ 
กด CTRL + X เพื่อออกจาก nano
#

เช็คหมายเลขพอร์ตของ Blynk-local
9443 tcp/ Mobile App port
8080 tcp/ Hardware connect

#apt-get install net-tools -y
#netstat -na | grep tcp
tcp6       0      0 :::22                   :::*                    LISTEN
tcp6       0      0 :::8440                 :::*                    LISTEN
tcp6       0      0 :::9443                 :::*                    LISTEN
#

Blynk Server เก็บข้อมูล ลงในฐานข้อมูล PostgreSQL
1. ติดตั้ง PostgreSQL
#apt update
#apt install postgresql postgresql-contrib -y

2. สร้างฐานข้อมูล blynk และ user
su - postgres
psql
ภายใน PostgreSQL shell:
CREATE DATABASE blynk;
CREATE USER blynkuser WITH ENCRYPTED PASSWORD 'yourpassword'; //อย่าลืมเปลี่ยน yourpassword
GRANT ALL PRIVILEGES ON DATABASE blynk TO blynkuser;
\q
exit

3. สร้างตารางเก็บ Raw Data (reporting.record) ใน DB blynk
su - postgres -c "psql -d blynk"
ภายใน PostgreSQL shell:
CREATE SCHEMA IF NOT EXISTS reporting;

CREATE TABLE IF NOT EXISTS reporting.record (
    id BIGSERIAL PRIMARY KEY,
    date TIMESTAMP NOT NULL,
    device VARCHAR(64) NOT NULL,
    tag VARCHAR(64),
    pin VARCHAR(32) NOT NULL,
    value DOUBLE PRECISION,
    ts BIGINT
);
\q

4. แก้ไฟล์ server.properties ของ Blynk
#nano /root/blynk-local/server.properties
เพิ่ม 
web.request.max.size=524288
user.tags.limit=100
net.interface=eth
force.port.80.for.redirect=true
user.devices.limit=50
notifications.frequency.user.quota.limit=5
user.profile.max.size=256
profile.save.worker.period=60000
data.folder=/root/blynk-local/Blynk
server.ssl.cert=
user.message.quota.limit=100

enable.raw.db.data.store=true
enable.db=true
db.url=jdbc:postgresql://localhost:5432/blynk
db.user=blynkuser
db.password=yourpassword

user.widget.max.size.limit=20
allow.reading.widget.without.active.app=false
stats.print.worker.period=60000
log.level=info
restore.host=blynk-cloud.com
lcd.strings.pool.size=6
hardware.mqtt.port=8440
admin.pass=
listen.address=
allowed.administrator.ips=0.0.0.0/0,::/0
http.port=8080
restore=false
server.ssl.key=
admin.rootPath=/admin
product.name=Blynk
csv.export.data.points.max=43200
allow.store.ip=true
force.port.80.for.csv=false
hard.socket.idle.timeout=10
async.logger.ring.buffer.size=2048
https.port=9443
logs.folder=./logs
webhooks.frequency.user.quota.limit=1000
initial.energy=100000
blocking.processor.thread.pool.limit=6
map.strings.pool.size=25
table.rows.pool.size=100
admin.email=admin@blynk.cc
server.ssl.key.pass=
user.dashboard.max.limit=100
webhooks.response.size.limit=96
terminal.strings.pool.size=25
notifications.queue.limit=2000

และแก้ไขตรง enable.raw.db.data.store=false และ enable.db=false ให้เป็น true

enable.raw.db.data.store=true
enable.db=true
กด CTRL + O กด Enter เพื่อเขียนไฟล์ 
กด CTRL + X เพื่อออกจาก nano
  
#
5. รีสตาร์ท Blynk Server
#pkill -f server.jar
#nohup java -jar /root/blynk-local/server-0.41.17.jar -dataFolder /root/blynk-local/Blynk -serverConfig /root/blynk-local/server.properties &

6. ทดสอบการส่งข้อมูล
ในโค้ด Arduino (ESP32, ESP8266):
Blynk.virtualWrite(V1, 25.6);  // ตัวอย่างส่งค่าไปยัง V1
หรือใช้ Widget จาก Blynk App ส่งค่าไปยัง V-Pin เช่น V1

7. ตรวจสอบข้อมูลใน PostgreSQL
su - postgres -c "psql -d blynk"
ภายใน shell:
SELECT COUNT(*) FROM reporting.record;
SELECT * FROM reporting.record ORDER BY id DESC LIMIT 5;
\q

แก้ไข crontab
@reboot java -jar /root/blynk-local/server-0.41.17.jar -dataFolder /root/blynk-local/Blynk -serverConfig /root/blynk-local/server.properties &

#reboot
